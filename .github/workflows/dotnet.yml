name: .NET

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration Release
      - name: Test
        run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage"
      - name: Extract version from tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV
      - name: Pack
        if: startsWith(github.ref, 'refs/tags/')
        run: dotnet pack --no-build --configuration Release --output ./artifacts -p:PackageVersion=${{ env.PACKAGE_VERSION }}
      - name: Publish to NuGet (Windows/pwsh)
        if: startsWith(github.ref, 'refs/tags/')
        shell: pwsh
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          $pkgs = Get-ChildItem -Path "$PWD/artifacts" -Filter *.nupkg
          if (-not $pkgs) {
            Write-Host "No .nupkg found in $PWD/artifacts"
            Get-ChildItem -Recurse | Out-Host
            throw "Package not found"
          }
          foreach ($p in $pkgs) {
            dotnet nuget push $p.FullName --api-key "$env:NUGET_API_KEY" --source https://api.nuget.org/v3/index.json
          }
